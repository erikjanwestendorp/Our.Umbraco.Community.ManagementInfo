{"version":3,"file":"assets.js","sources":["../../../assets/src/my-element.ts"],"sourcesContent":["import { LitElement, html, customElement, css } from \"@umbraco-cms/backoffice/external/lit\";\r\nimport { UmbElementMixin } from \"@umbraco-cms/backoffice/element-api\";\r\nimport { UMB_WORKSPACE_CONTEXT, UmbEntityWorkspaceContext } from \"@umbraco-cms/backoffice/workspace\";\r\nimport { UmbDocumentTypeDetailRepository } from '@umbraco-cms/backoffice/document-type';\r\n\r\n@customElement('my-workspaceview')\r\nexport default class MyWorspaceViewElement extends UmbElementMixin(LitElement) {\r\n\r\n    private documentTypeJson: string = '{}'; // Initialize with an empty JSON object\r\n\r\n    constructor() {\r\n        super();\r\n        console.log('data', this.dataset);\r\n\r\n        this.consumeContext(UMB_WORKSPACE_CONTEXT, async (ctx) => {\r\n            const context = ctx as UmbEntityWorkspaceContext;\r\n            const unique = context.getUnique();\r\n            console.log(unique);\r\n\r\n            if (unique) {\r\n                // Create an instance of the UmbDocumentTypeDetailRepository\r\n                const repository = new UmbDocumentTypeDetailRepository(this);\r\n\r\n                try {\r\n                    // Fetch the document type details using the repository\r\n                    const documentTypeDetails = await repository.requestByUnique(unique);\r\n\r\n                    if (documentTypeDetails) {\r\n                        // Convert the details to a JSON string with indentation\r\n                        this.documentTypeJson = JSON.stringify(documentTypeDetails, null, 2);\r\n                        this.requestUpdate(); // Request a re-render to display the JSON\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching document type details:', error);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return html`     \r\n        <uui-box headline=\"Document Type Definition\">\r\n            <umb-code-block language=\"JSON\" copy>${this.documentTypeJson}</umb-code-block>\r\n        </uui-box>`;\r\n    }\r\n\r\n    static styles = css`\r\n    uui-box {\r\n        margin: 20px;\r\n    }\r\n  `;\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'my-workspaceview': MyWorspaceViewElement;\r\n    }\r\n}\r\n"],"names":["MyWorspaceViewElement","UmbElementMixin","LitElement","UMB_WORKSPACE_CONTEXT","ctx","unique","repository","UmbDocumentTypeDetailRepository","documentTypeDetails","error","html","css","__decorateClass","customElement"],"mappings":";;;;;;;;;AAMA,IAAqBA,IAArB,cAAmDC,EAAgBC,CAAU,EAAE;AAAA;AAAA,EAI3E,cAAc;AACJ,aAHV,KAAQ,mBAA2B,MAIvB,QAAA,IAAI,QAAQ,KAAK,OAAO,GAE3B,KAAA,eAAeC,GAAuB,OAAOC,MAAQ;AAEhD,YAAAC,IADUD,EACO;AAGvB,UAFA,QAAQ,IAAIC,CAAM,GAEdA,GAAQ;AAEF,cAAAC,IAAa,IAAIC,EAAgC,IAAI;AAEvD,YAAA;AAEA,gBAAMC,IAAsB,MAAMF,EAAW,gBAAgBD,CAAM;AAEnE,UAAIG,MAEA,KAAK,mBAAmB,KAAK,UAAUA,GAAqB,MAAM,CAAC,GACnE,KAAK,cAAc;AAAA,iBAElBC,GAAO;AACJ,kBAAA,MAAM,yCAAyCA,CAAK;AAAA,QAChE;AAAA,MACJ;AAAA,IAAA,CACH;AAAA,EACL;AAAA,EAEA,SAAS;AACE,WAAAC;AAAA;AAAA,mDAEoC,KAAK,gBAAgB;AAAA;AAAA,EAEpE;AAOJ;AA7CqBV,EAwCV,SAASW;AAAA;AAAA;AAAA;AAAA;AAxCCX,IAArBY,EAAA;AAAA,EADCC,EAAc,kBAAkB;AAAA,GACZb,CAAA;"}